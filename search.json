[
  {
    "objectID": "pytorch/check_pytorch_cuda.html",
    "href": "pytorch/check_pytorch_cuda.html",
    "title": "Check PyTorch installation",
    "section": "",
    "text": "Import pytorch and check if cuda is available.\n\nimport torch\ntorch.cuda.is_available()\n\nTrue\n\n\nPytorch will be able to convert to cuda tensor if (a) GPU is available, (b) the installed version of pytorch was compiled for GPU. In my case, the conda installation failed, pip3 installation instruction provided in the pytorch website worked.\n\ntorch.zeros(10).cuda()\n\ntensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "pytorch/activation_functions.html",
    "href": "pytorch/activation_functions.html",
    "title": "Activation functions",
    "section": "",
    "text": "import torch\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "pytorch/activation_functions.html#sigmoid-function",
    "href": "pytorch/activation_functions.html#sigmoid-function",
    "title": "Activation functions",
    "section": "Sigmoid function",
    "text": "Sigmoid function\n\nsigmoid = torch.nn.Sigmoid()\nx = torch.arange(-10, 10, step=1)\n\nplt.plot(x, sigmoid(x), 'k-', label = 'sigmoid')\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('f(x)')\nplt.show()"
  },
  {
    "objectID": "pytorch/activation_functions.html#relu-function",
    "href": "pytorch/activation_functions.html#relu-function",
    "title": "Activation functions",
    "section": "ReLu function",
    "text": "ReLu function\n\nrelu = torch.nn.ReLU()\nx = torch.arange(-10, 10, step=1)\n\nplt.plot(x, relu(x), 'k-', label = 'ReLu')\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('f(x)')\nplt.show()"
  },
  {
    "objectID": "pytorch/activation_functions.html#leaky-relu",
    "href": "pytorch/activation_functions.html#leaky-relu",
    "title": "Activation functions",
    "section": "Leaky ReLu",
    "text": "Leaky ReLu\n\nf = torch.nn.LeakyReLU(negative_slope=0.1)\nx = torch.arange(-10, 10, step=1.0)\n\nplt.plot(x, f(x), 'k-', label = 'Leaky ReLu')\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('f(x)')\nplt.show()"
  },
  {
    "objectID": "pytorch/activation_functions.html#softmax-function",
    "href": "pytorch/activation_functions.html#softmax-function",
    "title": "Activation functions",
    "section": "Softmax function",
    "text": "Softmax function\n\n# create a softmax module to apply to the last dimension of the input tensor\nf = torch.nn.Softmax(dim=-1)\nx = torch.arange(-10, 10, step=1.0)\n\nplt.plot(x, f(x), 'k-', label = 'Softmax')\nplt.legend()\nplt.xlabel('x')\nplt.ylabel('f(x)')\nplt.show()\n\n\n\n\nSoftmax is useful for a vector input. The sum of the values for each element of the vector becomes 1.0\n\n# create a vector (rank 2 tensor) with 3 elements\nx = torch.randn(1, 3)\nx\n\ntensor([[-0.4259,  1.3028, -1.4466]])\n\n\n\n# apply softmax along the last dim (column)\nf = torch.nn.Softmax(dim=1)\ny = f(x)\ny\n\ntensor([[0.1430, 0.8055, 0.0515]])\n\n\n\n# verify the sum of the softmax values\ntorch.sum(y, dim=1)\n\ntensor([1.])"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hello! I am a graduate student at Yingling Research Group at NC State. My PhD research focuses on developing novel modeling method for ultra small nanoparticles and applying machine learning and nanoinformatics to optimize external magnetic field guided self assembly of nanomaterials. I’m proficient in large scale atomistic simulations and molecular modeling of magnetic and plasmonic nanoparticles.\nThank you for visiting!\n\nMy Google Scholar Profile\nConnect me via LinkedIn\nFollow me on ResearchGate \n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Akhlak Mahmood",
    "section": "",
    "text": "Hello! I am a graduate student at Yingling Research Group at NC State. My PhD research focuses on developing novel modeling method for ultra small nanoparticles and applying machine learning and nanoinformatics to optimize external magnetic field guided self assembly of nanomaterials. I’m proficient in large scale atomistic simulations and molecular modeling of magnetic and plasmonic nanoparticles.\nThank you for visiting!\n\nMy Google Scholar Profile\nConnect me via LinkedIn\nFollow me on ResearchGate \n\n\n\n\n Back to top"
  }
]